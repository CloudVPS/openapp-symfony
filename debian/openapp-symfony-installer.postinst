#!/bin/sh
# postinst script for mysql
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

INSTALLDIR=/var/www
SIGNKEYS="9AD617FF"

fatal() {
	echo "ERROR: $1"
	[ -f /tmp/symfony-$$.tar.gz ] && rm -f /tmp/symfony-$$.tar.gz
	exit 1
}

check_file_signature() {
    FILE=$1

    # Run gpg -k to make sure we have defaults in /root/.gnupg
    gpg -k > /dev/null 2>&1

    # Fetch the keys
    for KEY in ${SIGNKEYS}; do
        SENDERKEY=$(gpg --batch --no-tty --search-key "${KEY}"  | tr '\n' ' ' | sed -e 's/.*key \([0-9A-F]\+\).*/\1/');
        gpg --recv-keys --batch --no-tty "$SENDERKEY" > /dev/null 2>&1
        [ $? -gt 0 ] && return 1
    done

    # Fetch the signature
    wget -q -O /tmp/symfony-$$.tar.gz.sig ${FILE}
    [ $? -eq 0 ] || return 2

    gpg --verify /tmp/symfony-$$.tar.gz.sig > /dev/null 2>&1 || return 3

    return 0
}

install_symfony() {
	MIRROR=http://download.openpanel.com/openapp-files/symfony
	PASSWORD=`pwgen -s 10`

    echo "Mysql password: ${PASSWORD}"

	MYSQL=/usr/bin/mysql
	OPTS="--defaults-file=/etc/mysql/debian.cnf"

	echo "Creating backup of current /var/www in /var/backups/var.www.symfony.tgz"
	tar zcf /var/backups/var.www.symfony.tgz /var/www/

	echo "Removing data in /var/www"
	rm -rf /var/www
	mkdir /var/www

	wget -q -O /tmp/symfony-$$.tar.gz ${MIRROR}/symfony-newest.tar.gz
	if [ $? -eq 0 ]; then
        if [ -x /usr/bin/gpg ]; then
            echo "Checking signature on downloaded file"
            check_file_signature ${MIRROR}/symfony-newest.tar.gz

            case "$?" in
                0)
                    echo "Succesful verification of the signature."
                ;;
                1)
                    echo "WARNING: Could not verify signature! Could not download the needed keys"
                ;;
                2)
                    echo "WARNING: Could not verify signature! Could not download the signature"
                ;;
                3)
                    echo "WARNING: Could not verify signature! Verification failed."
                ;;
                *)
                    echo "WARNING: Unknown error whily verifying signature!"
                ;;
            esac
        else
            echo "WARNING: Could not verify the signature on this download. Gpg is not installed"
        fi
		mkdir -p ${INSTALLDIR} || fatal "Unable to create directory ${INSTALLDIR}"
		cd ${INSTALLDIR} || fatal "Unable to go into directory ${INSTALLDIR}"
		tar --transform 's/^Symfony/./' -zxf /tmp/symfony-$$.tar.gz || fatal "Unable to extract Symfony package into ${INSTALLDIR}"
        chown -R www-data:www-data ${INSTALLDIR}

		${MYSQL} ${OPTS} -e "CREATE DATABASE IF NOT EXISTS symfony CHARACTER SET utf8 COLLATE utf8_general_ci;" || fatal "Unable to create database symfony"
		${MYSQL} ${OPTS} -e "GRANT USAGE ON mysql.* TO 'symfony'@'localhost' IDENTIFIED BY '$PASSWORD';" || fatal "Unable to create mysql-user symfony"
		${MYSQL} ${OPTS} -e "GRANT ALL PRIVILEGES ON symfony.* to 'symfony'@'localhost';"|| fatal "Unable to set permissions to mysql-user symfony"
		/usr/bin/mysqladmin --defaults-file=/etc/mysql/debian.cnf flush-privileges || fatal "Unable to flush mysql privileges"

        HASH=$(echo ${PASSWORD} | md5sum | cut -f 1 -d ' ')
        cat <<EOB > ${INSTALLDIR}/app/config/parameters.ini
; These parameters can be imported into other config files
; by enclosing the key with % (like %database_user%)
; Comments start with ';', as in php.ini
[parameters]
    database_driver   = pdo_mysql
    database_host     = localhost
    database_port     =
    database_name     = symfony
    database_user     = symfony
    database_password = ${PASSWORD}

    mailer_transport  = smtp
    mailer_host       = localhost
    mailer_user       =
    mailer_password   =

    locale            = en

    secret            = ${HASH}
EOB

    fi

}

case "$1" in
    configure)
		if [ -z $2 ]; then
            install_symfony

			## New install. Configure Apache
			a2dissite default
			a2enmod rewrite headers expires ssl
            a2ensite symfony

            invoke-rc.d apache2 restart
		fi
	;;
	abort-upgrade|abort-remove|abort-deconfigure|triggered)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
